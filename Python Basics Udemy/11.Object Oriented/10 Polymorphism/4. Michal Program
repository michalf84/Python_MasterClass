class Album(object):

    def __init__(self,name,year,artist):
        self.name=name
        self.year=year
        self.artist=artist

        if artist is None:
            self.artist=Artist("various artists")

        self.tracks=[]

    def add_song(self,song,position=None):
        if position is None:
            self.tracks.append(song)
        else:
            self.tracks.insert(position,song)


class Artist(object):

    def __init__(self,name):
        self.name=name
        self.albums=[]

    def add_album(self,album):
        self.albums.append(album)

class Song(object):
    def __init__(self,title,artist,duration=0):
        self.title=title
        self.artist=artist
        self.duration=duration

    def get_title(self):
        return self.titles



def load_data():
    artist_list=[]
    new_artist=None
    new_album=None
    lista=[]

    with open("albums.txt", "r") as albums:
        for line in albums:
            # data row should consist of (artist, album, year, song)
            artist_field, album_field, year_field, song_field = tuple(line.strip('\n').split('\t'))
            year_field = int(year_field)
            #print("{}:{}:{}:{}".format(artist_field, album_field, year_field, song_field))
            #print(artist_field)
            if new_artist is None:
                new_artist=Artist(artist_field)
                #print(new_artist.name)
                if new_album is None:
                    new_album=Album(album_field,year_field,new_artist)
                    new_artist.add_album(new_album)


            elif new_artist.name==artist_field:

                if new_album.name!=album_field:
                    new_album=Album(album_field,year_field,new_artist)
                    new_artist.add_album(new_album)
            elif new_artist.name!=artist_field:
                artist_list.append(new_artist)
                new_artist=Artist(artist_field)
                new_album=Album(album_field,year_field,new_artist)
                new_artist.add_album(new_album)

            new_song = Song(song_field, new_artist)
            new_album.add_song(new_song)

        if new_artist is not None:
            if new_album is not None:
                new_artist.add_album(new_album)
            artist_list.append(new_artist)





    return artist_list
##does not return the last artist it is missing!

def create_checkfile(artist_list):
    """Create a check file from the object data for comparison with the original file"""
    with open("checkfile.txt", 'w') as checkfile:
        for new_artist in artist_list:
            for new_album in new_artist.albums:
                for new_song in new_album.tracks:
                    print("{0.name}\t{1.name}\t{1.year}\t{2.title}".format(new_artist, new_album, new_song),
                          file=checkfile)

if __name__=='__main__':
    artists=load_data()
    print("There are {} artists".format(len(artists)))

    create_checkfile(artists)

